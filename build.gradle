plugins {
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'io.freefair.lombok' version '8.4'
    id 'nu.studer.jooq' version '8.2'
    id 'java'
}

group = 'com.bit.galleog.runtracker'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    ver = [
            lombok        : '1.18.30',
            postgresql    : '42.7.0',
            testcontainers: '1.18.3',
            dbsetup       : '2.1.0',
            assertjDb     : '2.0.2',
            findbugs      : '3.0.1'
    ]
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${ver.testcontainers}"
    }

    dependencies {
        dependency "org.postgresql:postgresql:${ver.postgresql}"
        dependency "com.ninja-squad:DbSetup:${ver.dbsetup}"
        dependency "org.assertj:assertj-db:${ver.assertjDb}"
        dependency "com.google.code.findbugs:annotations:${ver.findbugs}"
    }
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-jooq',
            'org.springframework.boot:spring-boot-docker-compose',
            'org.jooq:jooq',
            'org.apache.commons:commons-lang3',
            'com.google.code.findbugs:annotations'
    )

    runtimeOnly(
            'org.postgresql:postgresql'
    )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.testcontainers:postgresql',
            'com.ninja-squad:DbSetup',
            'org.assertj:assertj-db'
    )

    jooqGenerator(
            'ch.qos.logback:logback-classic',
            'org.testcontainers:postgresql',
            'org.postgresql:postgresql',
            files('src/jooqGenerator')
    )
}

test {
    useJUnitPlatform()
}

lombok {
    version = "${ver.lombok}"
}

jooq {
    version = dependencyManagement.importedProperties['jooq.version']

    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN

                jdbc {
                    driver = 'org.testcontainers.jdbc.ContainerDatabaseDriver'
                    url = 'jdbc:tc:postgresql:15.5-alpine:///databasename?TC_INITSCRIPT=file:src/main/resources/schema.sql'
                    user = 'test'
                    password = 'test'
                }

                generator {
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        includes = '.*'
                        excludes = 'databasechangelog.*'
                        inputSchema = 'public'
                        forcedTypes {
                            forcedType {
                                userType = 'com.bit.galleog.runtracker.domain.Sex'
                                enumConverter = true
                                includeExpression = '.*\\.SEX'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        javaTimeTypes = true
                        indexes = false
                    }
                    target {
                        packageName = 'com.bit.galleog.runtracker.domain'
                        directory = "$buildDir/generated/source/jooq"
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}